import os

class Config:
    ASTERISK_HOST = os.getenv('ASTERISK_HOST', '127.0.0.1')
    """ The host of the asterisk server """

    ASTERISK_AMI_PORT = os.getenv('ASTERISK_AMI_PORT', '5038')
    """ The port where asterisk is listening for AMI commands. Default is 5038 """
    ASTERISK_AMI_USER = os.getenv('ASTERISK_AMI_USER', 'asteramisk')
    """ The username to use when connecting to Asterisk Manager Interface. This needs to be configured in manager.conf on the asterisk server """
    ASTERISK_AMI_PASS = os.getenv('ASTERISK_AMI_PASS', 'asteramisk')
    """ The password to use when connecting to Asterisk Manager Interface. This needs to be configured in manager.conf on the asterisk server """

    ASTERISK_ARI_PORT = os.getenv('ASTERISK_ARI_PORT', '8088')
    """ The port where the Asterisk REST API is listening. Default is 8088 """
    ASTERISK_ARI_USER = os.getenv('ASTERISK_ARI_USER')
    """ The username to use when connecting to Asterisk REST API. This needs to be configured in ari.conf on the asterisk server """
    ASTERISK_ARI_PASS = os.getenv('ASTERISK_ARI_PASS')
    """ The password to use when connecting to Asterisk REST API. This needs to be configured in ari.conf on the asterisk server """

    ASTERISK_INCOMING_CALL_CONTEXT = os.getenv('ASTERISK_INCOMING_CALL_CONTEXT', 'asteramisk-incoming-call')
    """ The context to which your Asterisk PSTN endpoint will send incoming calls. This is the context=your_context line in pjsip.conf under your PSTN endpoint configuration """
    ASTERISK_INCOMING_TEXT_CONTEXT = os.getenv('ASTERISK_INCOMING_TEXT_CONTEXT', 'asteramisk-incoming-text')
    """ The context to which your Asterisk PSTN endpoint will send incoming text messages. This is the message_context=your_context line in pjsip.conf under your PSTN endpoint configuration """
    ASTERISK_PSTN_ENDPOINT = os.getenv('ASTERISK_PSTN_ENDPOINT', 'pstn_endpoint')
    """ The name of your PSTN endpoint as configured in pjsip.conf """
    ASTERISK_PSTN_GATEWAY_HOST = os.getenv('ASTERISK_PSTN_GATEWAY_HOST', 'toronto1.voip.ms')
    """ The host of your PSTN gateway as configured in pjsip.conf """
    ASTERISK_PSTN_GATEWAY_PORT = os.getenv('ASTERISK_PSTN_GATEWAY_PORT', '5060')
    """ The port of your PSTN gateway as configured in pjsip.conf. Default is 5060, which is nearly always correct """
    ASTERISK_PSTN_GATEWAY_USER = os.getenv('ASTERISK_PSTN_GATEWAY_USER', 'asteramisk')
    """ The username to use when connecting to your PSTN gateway. This is the value of the username line in pjsip.conf under your PSTN auth configuration """
    
    ASTERISK_SOUNDS_DIR = os.getenv('ASTERISK_SOUNDS_DIR', '/usr/share/asterisk/sounds')
    """ The directory where asterisk stores sound files. Default is /usr/share/asterisk/sounds """
    ASTERISK_TTS_SOUNDS_SUBDIR = os.getenv('ASTERISK_SOUNDS_SUBDIR', 'asteramisk')
    """ The subdirectory where asterisk stores audio files that are generated by asteramisk for text to speech. Default is asteramisk """

    ASTERAMISK_HOST = os.getenv('ASTERAMISK_HOST', '127.0.0.1')
    """ The host of the asteramisk server. The hostname or IP address to which Asterisk should send AGI requests and audiosocket media. The hostname or IP address your Python application is running on."""

    AUDIOSOCKET_BINDADDR = os.getenv('AUDIOSOCKET_BINDADDR', '0.0.0.0')
    """ The IP address to which the audiosocket server should bind. Default is 0.0.0.0, which allows the server to listen on all interfaces. """

    AUDIOSOCKET_PORT = os.getenv('AUDIOSOCKET_PORT', '0')
    """ The port on which asteramisk's audiosocket server is listening for incoming audio. Default is 0, which means asteramisk will use a random available port. """

    SYSTEM_PHONE_NUMBER = os.getenv('SYSTEM_PHONE_NUMBER')
    """ The phone number associated with your telephony system. Used as the caller ID when making outgoing calls, if not specified in your code. """
    SYSTEM_NAME = os.getenv('SYSTEM_NAME', 'Default')
    """ The name of your system. Used as the caller ID name when making outgoing calls, if not specified in your code. """
    SYSTEM_VOICE = os.getenv('SYSTEM_VOICE', 'en-US-Neural2-J')
    """ The voice to use when speaking to the user. Default is en-US-Neural2-J. See https://cloud.google.com/text-to-speech/docs/voices for all available voices """

    DEFAULT_REALTIME_GPT_MODEL = os.getenv('DEFAULT_REALTIME_GPT_MODEL', 'gpt-4o-mini-realtime-preview')
    """ The default model to use for when connecting to the OpenAI Realtime API using the UI's connect_openai_agent method. Default is gpt-4o-mini-realtime-preview """
    DEFAULT_GPT_MODEL = os.getenv('DEFAULT_GPT_MODEL', 'gpt-4o-mini')
    """ The default model to use for when connecting to the OpenAI API using the UI's connect_openai_agent method. Default is gpt-4o-mini """

    ADMIN_PHONE_NUMBER = os.getenv('ADMIN_PHONE_NUMBER')
    """ The default phone number for the notifier module to use wnen you send an error message. """

    LOG_DIR = os.getenv('LOG_DIR', '/var/log/asteramisk')
    """ The directory where asteramisk stores log files. Default is /var/log/asteramisk """

    OUTBOUND_CALL_TIMEOUT = os.getenv('OUTBOUND_CALL_TIMEOUT', 30)
    """ The timeout in seconds for outbound calls. Default is 30 seconds. """

    @property
    def GOOGLE_APPLICATION_CREDENTIALS(self):
        """ The path to the google application credentials file. This is needed for the google cloud speech api. Without it, this library is very limited. """
        # Set environment variable GOOGLE_APPLICATION_CREDENTIALS
        # This is needed for the google cloud speech api
        # I don't get why they make this so complicated by needing to set an environment variable
        return os.getenv('GOOGLE_APPLICATION_CREDENTIALS')
    
    @GOOGLE_APPLICATION_CREDENTIALS.setter
    def GOOGLE_APPLICATION_CREDENTIALS(self, value):
        os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = value
 

config = Config()

   
